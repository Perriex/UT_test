/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 13 08:14:23 GMT 2023
 */

package morriex.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import morriex.entity.Comment;
import morriex.model.CommentModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Comment_ESTest extends Comment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      Integer integer0 = Integer.valueOf((-397));
      comment0.addVote(integer0, "");
      Integer integer1 = comment0.getDislikes();
      assertNotNull(integer1);
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      comment0.text = "u:^pW8BA";
      String string0 = comment0.getText();
      assertEquals("u:^pW8BA", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      commentModel0.text = "YwAS36$y%|Ljbvw";
      commentModel0.text = "";
      Comment comment0 = new Comment(commentModel0);
      String string0 = comment0.getText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      Integer integer0 = comment0.getLikes();
      comment0.movieId = integer0;
      Integer integer1 = comment0.getMovieId();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      Integer integer0 = comment0.commentId;
      commentModel0.movieId = integer0;
      Comment comment1 = new Comment(commentModel0);
      Integer integer1 = comment1.getMovieId();
      assertEquals(2, (int)comment1.getCommentId());
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      Integer integer0 = Integer.valueOf((-397));
      comment0.movieId = integer0;
      Integer integer1 = comment0.getMovieId();
      assertEquals((-397), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      comment0.userEmail = "DB@B;nwA";
      String string0 = comment0.getEmail();
      assertEquals("DB@B;nwA", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      comment0.userEmail = null;
      comment0.userEmail = "";
      String string0 = comment0.getEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      Integer integer0 = comment0.getLikes();
      comment0.commentId = integer0;
      Integer integer1 = comment0.getCommentId();
      assertEquals(0, (int)comment0.getCommentId());
      assertNotNull(integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      comment0.commentId = null;
      Integer integer0 = comment0.getCommentId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      comment0.votes = null;
      // Undeclared exception!
      try { 
        comment0.addVote(commentModel0.movieId, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("morriex.entity.Comment", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Comment comment0 = null;
      try {
        comment0 = new Comment((CommentModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("morriex.entity.Comment", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      Integer integer0 = Integer.valueOf((-1));
      comment0.addVote(integer0, (String) null);
      Integer integer1 = comment0.getDislikes();
      assertNotNull(integer1);
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      Integer integer0 = comment0.commentId;
      comment0.addVote(integer0, "");
      Integer integer1 = comment0.getDislikes();
      assertEquals(0, (int)integer1);
      assertNotNull(integer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      comment0.addVote(commentModel0.movieId, "");
      // Undeclared exception!
      try { 
        comment0.getDislikes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("morriex.entity.Comment", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      Integer integer0 = comment0.commentId;
      assertNotNull(integer0);
      
      comment0.addVote(integer0, "");
      Integer integer1 = comment0.getLikes();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      Integer integer0 = comment0.getLikes();
      assertNotNull(integer0);
      
      comment0.addVote(integer0, "");
      Integer integer1 = comment0.getLikes();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      String string0 = comment0.getText();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      Integer integer0 = comment0.getCommentId();
      assertEquals(1, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      comment0.addVote(commentModel0.movieId, "");
      // Undeclared exception!
      try { 
        comment0.getLikes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("morriex.entity.Comment", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      String string0 = comment0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      Integer integer0 = comment0.getMovieId();
      assertNull(integer0);
  }
}
