/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 13 08:12:59 GMT 2023
 */

package morriex.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.ZoneId;
import java.util.Date;
import java.util.Locale;
import java.util.Set;
import morriex.entity.Comment;
import morriex.entity.Movie;
import morriex.model.CommentModel;
import morriex.model.MovieModel;
import morriex.model.view.MovieShortModel;
import morriex.model.view.MovieViewModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Movie_ESTest extends Movie_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      MockDate mockDate0 = new MockDate(1, 0, 1013);
      // Undeclared exception!
      try { 
        movie0.isBetween((Date) null, mockDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("morriex.entity.Movie", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      Integer integer0 = Integer.getInteger((String) null, (-2818));
      movie0.addRate((String) null, integer0);
      assertNull(movie0.getName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      movieModel0.coverImage = "";
      Movie movie0 = new Movie(movieModel0);
      MovieShortModel movieShortModel0 = movie0.getShortModel();
      assertNotNull(movieShortModel0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      movie0.director = "morriex.exception.HttpException";
      MovieShortModel movieShortModel0 = movie0.getShortModel();
      assertNotNull(movieShortModel0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      movie0.image = "| x%9i8o;O38Hrtv/$T";
      MovieShortModel movieShortModel0 = movie0.getShortModel();
      assertNotNull(movieShortModel0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      movieModel0.summary = "l`(;@w[HB,7V`X+";
      Movie movie0 = new Movie(movieModel0);
      MovieShortModel movieShortModel0 = movie0.getShortModel();
      assertNotNull(movieShortModel0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      movie0.coverImage = "";
      MovieViewModel movieViewModel0 = movie0.getModel();
      assertNotNull(movieViewModel0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      movie0.director = "Q?%@?mXqN-";
      MovieViewModel movieViewModel0 = movie0.getModel();
      assertNotNull(movieViewModel0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      movieModel0.image = "A_-_I(J6QYF+3']q!";
      Movie movie0 = new Movie(movieModel0);
      MovieViewModel movieViewModel0 = movie0.getModel();
      assertNotNull(movieViewModel0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      movieModel0.name = "21*VVXHNF";
      Movie movie0 = new Movie(movieModel0);
      MovieViewModel movieViewModel0 = movie0.getModel();
      assertNotNull(movieViewModel0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      Integer integer0 = movie0.getNumberOfSameGenres(movie0);
      assertNotNull(integer0);
      assertEquals(0, (int)integer0);
      
      movieModel0.id = integer0;
      Movie movie1 = new Movie(movieModel0);
      movie1.getModel();
      assertEquals(0, (int)movie1.getId());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      movie0.addComment(comment0);
      Integer integer0 = movie0.getNumberOfSameGenres(movie0);
      try { 
        movie0.getComment(integer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // CommentNotFound
         //
         verifyException("morriex.entity.Movie", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      MockDate mockDate0 = new MockDate();
      movieModel0.releaseDate = (Date) mockDate0;
      Movie movie0 = new Movie(movieModel0);
      Boolean boolean0 = movie0.isReleaseDate("#8v.(TL");
      //  // Unstable assertion: assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      MockDate mockDate0 = new MockDate();
      movieModel0.releaseDate = (Date) mockDate0;
      Movie movie0 = new Movie(movieModel0);
      Date date0 = movie0.getReleaseDate();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      Locale.IsoCountryCode locale_IsoCountryCode0 = Locale.IsoCountryCode.PART3;
      Set<String> set0 = Locale.getISOCountries(locale_IsoCountryCode0);
      movie0.genres = set0;
      Integer integer0 = movie0.getNumberOfSameGenres(movie0);
      assertEquals(31, (int)integer0);
      assertNotNull(integer0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      movieModel0.name = "21*VVXHNF";
      Movie movie0 = new Movie(movieModel0);
      String string0 = movie0.getName();
      assertEquals("21*VVXHNF", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      movie0.name = "";
      String string0 = movie0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      movie0.genres = null;
      // Undeclared exception!
      try { 
        movie0.isInGenre((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("morriex.entity.Movie", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      movie0.addRate((String) null, (Integer) null);
      try { 
        movie0.getShortModel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("morriex.entity.Movie", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      Locale.IsoCountryCode locale_IsoCountryCode0 = Locale.IsoCountryCode.PART1_ALPHA3;
      Set<String> set0 = Locale.getISOCountries(locale_IsoCountryCode0);
      movie0.genres = set0;
      // Undeclared exception!
      try { 
        movie0.getNumberOfSameGenres((Movie) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("morriex.entity.Movie", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      movie0.comments = null;
      try { 
        movie0.getComment((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("morriex.entity.Movie", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      movie0.ratings = null;
      // Undeclared exception!
      try { 
        movie0.addRate((String) null, (Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("morriex.entity.Movie", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      // Undeclared exception!
      try { 
        movie0.addComment((Comment) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("morriex.entity.Movie", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Movie movie0 = null;
      try {
        movie0 = new Movie((MovieModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("morriex.entity.Movie", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      movie0.addRate((String) null, (Integer) null);
      // Undeclared exception!
      try { 
        movie0.getRate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("morriex.entity.Movie", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      Double double0 = movie0.getRate();
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      movie0.genres = set0;
      // Undeclared exception!
      movie0.getNumberOfSameGenres(movie0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      String[] stringArray0 = new String[3];
      movieModel0.genres = stringArray0;
      Movie movie1 = new Movie(movieModel0);
      Integer integer0 = movie1.getNumberOfSameGenres(movie0);
      assertNotNull(integer0);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      Integer integer0 = movie0.getNumberOfSameGenres(movie0);
      assertNotNull(integer0);
      assertEquals(0, (int)integer0);
      
      movieModel0.id = integer0;
      Movie movie1 = new Movie(movieModel0);
      Integer integer1 = movie1.getAgeLimit();
      assertNull(integer1);
      assertEquals(0, (int)movie1.getId());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      MockDate mockDate0 = new MockDate();
      movieModel0.releaseDate = (Date) mockDate0;
      Movie movie0 = new Movie(movieModel0);
      Boolean boolean0 = movie0.isBetween(movieModel0.releaseDate, movieModel0.releaseDate);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      movie0.addRate((String) null, (Integer) null);
      try { 
        movie0.getModel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("morriex.entity.Movie", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Integer[] integerArray0 = new Integer[5];
      movieModel0.cast = integerArray0;
      Movie movie0 = new Movie(movieModel0);
      MovieShortModel movieShortModel0 = movie0.getShortModel();
      assertNotNull(movieShortModel0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Integer[] integerArray0 = new Integer[9];
      movieModel0.cast = integerArray0;
      Movie movie0 = new Movie(movieModel0);
      MovieViewModel movieViewModel0 = movie0.getModel();
      assertNotNull(movieViewModel0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      movie0.addComment(comment0);
      MovieViewModel movieViewModel0 = movie0.getModel();
      assertNotNull(movieViewModel0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Integer[] integerArray0 = new Integer[5];
      movieModel0.cast = integerArray0;
      Movie movie0 = new Movie(movieModel0);
      // Undeclared exception!
      try { 
        movie0.isActed((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("morriex.entity.Movie", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      Boolean boolean0 = movie0.isActed((Integer) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      movie0.genres = set0;
      Boolean boolean0 = movie0.isInGenre("Asia/Tokyo");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      Boolean boolean0 = movie0.isInGenre("morriex.model.view.CommentViewModel");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      CommentModel commentModel0 = new CommentModel();
      Comment comment0 = new Comment(commentModel0);
      Movie movie0 = new Movie(movieModel0);
      comment0.commentId = null;
      movie0.addComment(comment0);
      Comment comment1 = movie0.getComment((Integer) null);
      assertSame(comment1, comment0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      String string0 = movie0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      movie0.addRate("", (Integer) null);
      assertNull(movie0.getId());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      Integer integer0 = movie0.getId();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      Date date0 = movie0.getReleaseDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      // Undeclared exception!
      try { 
        movie0.isReleaseDate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Calendar", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MovieModel movieModel0 = new MovieModel();
      Movie movie0 = new Movie(movieModel0);
      Double double0 = movie0.getImdbRate();
      assertNull(double0);
  }
}
